@using Talent.Core;
@model Talent.WebApp.Models.Account.UserProfileModel

<div class="ui container">
   
    <div class="ui form">
        <h3 style="color:@Model.VerificationLevelNameCssColor">
            Verification Level: <b>@Model.VerificationLevelName</b>
        </h3>
    </div>
    <div class="ui hidden divider"></div>
    <h3 class="header" id="skin-document-header">
        Upload Documents for Verification
    </h3>
    <div class="ui divider"></div>
    <div>
        @Html.ValidationSummary(true)
        <p class="skin-document-status"></p>
    </div>
    @{
        var docTypes = new[]
        {
            new { DocType = DocumentType.IssuedID, Title = "Government Issued ID" },
            new { DocType = DocumentType.BankStatement, Title = "Bank Statement" },
            new { DocType = DocumentType.SignedSelfie, Title = "Signed Selfie" },
            new { DocType = DocumentType.AddressProof, Title = "Proof of Address" },
        };
    }
    @foreach (var docType in docTypes)
    {
        <div class="ui accordion">
            <div class="title">
                @docType.Title
                <i class="dropdown icon"></i>
                <ul class="cat-verification-comment">
                    @switch (docType.DocType)
                    {
                        case DocumentType.IssuedID:
                            <li>
                                <b>ID*</b> -Valid New Zealand Government issued ID(e.g.passport, driving licence, 18 + Card, NZ firearm license, etc);
                            </li>
                            break;
                        case DocumentType.SignedSelfie:
                            <li>
                                <b>Signed Selfie*</b> - A picture of selfie holding your ID as well as a paper with your name, date and Skin on it;
                            </li>
                            break;
                        case DocumentType.AddressProof:
                            <li>
                                <b>Proof of Address*</b> - Must be dated within the last 3 months (e.g. utilities bill, electoral roll, etc)
                            </li>
                            break;
                    }
                </ul>
            </div>

            @if (Model.PersonDocuments != null && Model.PersonDocuments.Where(x => x.DocumentType == (int)docType.DocType).Any())
            {
                var documents = Model.PersonDocuments.Where(x => x.DocumentType == (int)docType.DocType);

                <div class="content">
                    <div class="transition hidden">
                        <div class="ui positive message">
                            <div class="header">
                                You have done it!
                            </div>
                            <div class="ui divider hidden" id="skin-devider-space"></div>
                            @foreach (var doc in documents)
                            {
                                @Html.Raw(string.Format("<a href='/UploadFiles/{0}' target='_blank'> {1} </a>", doc.FileName, doc.FileName));
                                <div class="ui hidden divider" id="skin-devider-space"></div>
                                switch ((DocumentStatus)doc.Status)
                                {
                                    case DocumentStatus.Processing:
                                        <span> @Html.Raw(string.Format("{0}", Enum.GetName(typeof(DocumentStatus), doc.Status))) <i class="spinner icon"></i></span>
                                        if (ViewBag.IsAdmin)
                                        {
                                            <button data-id="@doc.Id" class="mini ui right floated red button skin-reject-btn">Reject</button>
                                            <button data-id="@doc.Id" class="mini ui right floated primary button skin-approve-btn">Approve </button>
                                        }
                                        break;
                                    case DocumentStatus.Rejected:
                                        <span> @Html.Raw(string.Format("{0}", Enum.GetName(typeof(DocumentStatus), doc.Status))) <i class="ban icon"></i></span>
                                        if (ViewBag.IsAdmin)
                                        {
                                            <button data-id="@doc.Id" class="mini ui right floated primary button skin-approve-btn">Approve </button>
                                        }
                                        break;
                                    case DocumentStatus.Approved:
                                        <span> @Html.Raw(string.Format("{0}", Enum.GetName(typeof(DocumentStatus), doc.Status))) <i class="checkmark icon"></i></span>
                                        if (ViewBag.IsAdmin)
                                        {
                                            <button data-id="@doc.Id" class="mini ui right floated red button skin-reject-btn">Reject </button>
                                        }
                                        break;
                                }

                                <div class="ui divider hidden"></div>
                            }
                            <div class="ui divider"></div>
                            <button class="ui blue basic button cat-uploadbtn" id="upload-@docType.DocType.ToString()">Upload New</button>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="content">
                    <div class="transition hidden">
                        <div class="ui orange message">
                            <div class="header">
                                Please upload your document
                            </div>
                            <div class="ui divider"></div>
                            <button class="ui blue basic button cat-uploadbtn" id="upload-@docType.DocType.ToString()">Upload New</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    <h3 class="header" id="skin-document-header">
        Requirements
    </h3>
    <div class="ui divider"></div>
    <table class="ui celled padded table" style="font-size:13px">
        <thead>
            <tr>
                <th class="single line">Level</th>
                @*<th class="single line">Daily Limit</th>*@
                <th class="single line">Documents Required</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    Anonymous
                </td>
                @*<td class="single line">
                    0
                </td>*@
                <td>
                    -
                </td>
            </tr>
            <tr>
                <td>
                    Newbie
                </td>
                @*<td>
                    500.00
                </td>*@
                <td>
                    ID* + Bank Statement
                </td>
            </tr>
            <tr>
                <td>
                    Verified
                </td>
                @*<td>
                    8,000.00
                </td>*@
                <td>
                    ID* + Bank Statement + Phone Number +  Signed Selfie*
                </td>
            </tr>
            <tr>
                <td>
                    Trusted
                </td>
                @*<td>
                    40,000.00
                </td>*@
                <td>
                    ID* + Bank Statement + Phone Number +  Signed Selfie* +  Proof of Address*
                </td>
            </tr>
            <tr>
                <td>
                    Institution
                </td>
                @*<td>
                    Unlimited
                </td>*@
                <td>
                    Please contact support
                </td>
            </tr>
        </tbody>
    </table>
</div>
