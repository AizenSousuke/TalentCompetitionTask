@using Talent.Core;
@model Talent.WebApp.Models.Account.UserProfileModel
@{
    ViewBag.Title = "My Profile";
    Layout = "~/Views/Shared/_LayoutAccount.cshtml";
}

<div class="ui container">
    @using (Html.BeginForm("UpdateProfile", "Admin", null, FormMethod.Post, new { id = "updateProfileForm", @class = "" }))
    {
        @Html.AntiForgeryToken()
        <input name="Id" value="@Model.Id" type="hidden" id="Id" />

        <div class="ui stackable grid form">
            <div class="sixteen wide column">
                @Html.Partial("_UserProfile", Model)
            </div>
            
        </div>
    }
</div>


@section scriptsSub
{
    <script src="~/Scripts/Views/user.profile.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDovexDmySxAUVSelyLbQqurlkiLVSVqWI&libraries=places&callback=initAutocomplete" async defer></script>

    <script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
             @*@type {!HTMLInputElement}*@
            (document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
          }
        }
      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>

    <script>

        $(function () {

            // Admin update user profile
            $("#save-profile-btn").click(function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: '/Admin/UpdateProfile',
                    data: $('#updateProfileForm').serialize(),
                    dataType: 'json',
                    success: function (result) {
                        $(".skin-update-profile-status").html(result.message);
                    },
                });
            });


             // User send sms code to mobile number
            $("#skin-send-sms-code-btn").click(function (e) {

                e.preventDefault();
                var id = $("#Id").val();
                var phoneNumber = $("#Mobile").val();

                $.ajax({
                    type: "POST",
                    url: '/Account/SendSMS',
                    data: { id: id, phoneNumber : phoneNumber },
                    dataType: 'json',
                    success: function (result) {
                        if (result.success) {
                            $("#skin-send-sms-div").hide();
                            $("#skin-verify-sms-div").show();
                        }
                        $(".skin-sms-verify-msg").html(result.message);
                    },
                });
            });

            // User submit sms code to verify mobile number
            $("#skin-verify-sms-btn").click(function (e) {

                e.preventDefault();
                var id = $("#Id").val();
                var mobileCode = $("#MobileCode").val();

                $.ajax({
                    type: "POST",
                    url: '/Verification/VerifyMobileCode',
                    data: { id: id, smsCode: mobileCode },
                    dataType: 'json',
                    success: function (result) {
                        if (result.success) {
                            $("#skin-send-sms-div").hide();
                        }
                        else {
                            $("#skin-send-sms-div").show();
                        }
                        $("#skin-verify-sms-div").hide();
                        $(".skin-sms-verify-msg").html(result.message);
                    },
                });
            });
        });

    </script>
}

@section stylesSub
{
    <style>
        .skin-error-msg, .skin-verified-msg {
            color: red;
        }

        #skin-devider-space {
            margin: 5px;
        }

        .skin-document-status {
            color: green;
            text-align: left;
            padding: 10px;
        }
    
        #skin-document-header {
            margin-bottom: 0px !important;
        }

        #skin-profile-header {
            padding-bottom: 0px !important;
        }

        .skin-update-profile-status {
            text-align: center;
            color: green;
            font-weight: bold;
        }

        .skin-sms-verify-msg {
            color: green;
            font-weight: bold;
        }
    </style>
}
